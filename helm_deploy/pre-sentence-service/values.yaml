---
generic-service:
  nameOverride: pre-sentence-service

  replicaCount: 4

  serviceAccountName: "court-case-service"

  image:
    repository: quay.io/hmpps/pre-sentence-service
    tag: app_version    # override at deployment time
    port: 3000

  ingress:
    v1_2_enabled: true
    v0_47_enabled: false
    enabled: true
    host: app-hostname.local    # override per environment
    tlsSecretName: pre-sentence-service-cert
    path: /

  livenessProbe:
    httpGet:
      path: /ping

  readinessProbe:
    httpGet:
      path: /ping

  # Environment variables to load into the deployment
  env:
    NODE_ENV: "production"
    REDIS_TLS_ENABLED: "true"
    TOKEN_VERIFICATION_ENABLED: "true"
    DATABASE_SCHEMA: "presentenceservice"
    DB_SSL_ENABLED: "true"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    pre-sentence-service:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      API_CLIENT_ID: "API_CLIENT_ID"
      API_CLIENT_SECRET: "API_CLIENT_SECRET"
      AUTH_API_CLIENT_ID: "AUTH_API_CLIENT_ID"
      AUTH_API_CLIENT_SECRET: "AUTH_API_CLIENT_SECRET"
      SESSION_SECRET: "SESSION_SECRET"
    pac-elasticache-redis:
      REDIS_HOST: "primary_endpoint_address"
      REDIS_AUTH_TOKEN: "auth_token"
    pre-sentence-service-rds-instance-output:
      DB_NAME: "database_name"
      DB_USER: "database_username"
      DB_PASS: "database_password"
      DB_SERVER: "rds_instance_address"
    pre-sentence-service-wproofreader:
      WP_LICENSE_KEY: "WP_LICENSE_KEY"
    hmpps-domain-events-topic:
      ACCESS_KEY_ID: "access_key_id"
      SECRET_ACCESS_KEY: "secret_access_key"
      TOPIC_ARN: "topic_arn"

gotenberg:
  nameOverride: gotenberg
  replicaCount: 2

  image:
    repository: gotenberg/gotenberg
    tag: 7.7.0
    port: 3000

  containerCommand: [ "gotenberg" ]
  containerArgs: [ "--chromium-ignore-certificate-errors","--api-timeout=30s","--pdfengines-engines=pdftk","--uno-listener-restart-threshold=0" ]

  ingress:
    enabled: false

  livenessProbe:
    httpGet:
      path: /health
    periodSeconds: 30
    initialDelaySeconds: 60
    timeoutSeconds: 20
    failureThreshold: 10

  readinessProbe:
    httpGet:
      path: /health
    periodSeconds: 20
    initialDelaySeconds: 60
    timeoutSeconds: 30
    failureThreshold: 15

  podSecurityContext:
    fsGroup: 1001

  securityContext:
    runAsUser: 1001
    privileged: false
    runAsNonRoot: true

wproofreader:
  nameOverride: wproofreader
  replicaCount: 1

  image:
    repository: quay.io/hmpps/pre-sentence-service-wproofreader
    tag: latest
    port: 8081

  ingress:
    v1_2_enabled: true
    v0_47_enabled: false
    enabled: true
    tlsSecretName: pre-sentence-service-cert
    path: /

  resources:
    requests:
      cpu: "1000m"
      memory: "2Gi"
    limits:
      cpu: "2000m"
      memory: "4Gi"

  livenessProbe:
    httpGet:
      path: /wscservice/api?cmd=ver
    periodSeconds: 30
    initialDelaySeconds: 60
    timeoutSeconds: 20
    failureThreshold: 10

  readinessProbe:
    httpGet:
      path: /wscservice/api?cmd=ver
    periodSeconds: 20
    initialDelaySeconds: 60
    timeoutSeconds: 30
    failureThreshold: 15

  podSecurityContext:
    fsGroup: 2000

  securityContext:
    runAsUser: 2000
    runAsNonRoot: true

#generic-prometheus-alerts:
#  targetApplication: pre-sentence-service
#  alertSeverity: prepare-a-case
