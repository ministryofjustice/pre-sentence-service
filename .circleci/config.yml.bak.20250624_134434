version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@6.1.0
  slack: circleci/slack@4.10.1

executors:
  integration-tests:
    docker:
      - image: cimg/node:20.5.1-browsers
      - image: localstack/localstack:1.2.0
        environment:
          SERVICES: sns
          DATA_DIR: /tmp/localstack/data
          TMP_DIR: /private
          DEFAULT_REGION: eu-west-2
      - image: cimg/postgres:13.8
        environment:
          POSTGRES_PASSWORD: pre-sentence-service
          POSTGRES_USER: pre-sentence-service
          POSTGRES_DB: pre-sentence-service
      - image: bitnami/redis:7.0.5
        environment:
          ALLOW_EMPTY_PASSWORD=yes
      - image: quay.io/hmpps/pre-sentence-service-wproofreader:latest
    working_directory: ~/app


parameters:
  alerts-slack-channel:
    type: string
    default: probation_in_court_dev

  releases-slack-channel:
    type: string
    default: probation_in_court_dev

  node-version:
    type: string
    default: 20.17.0-browsers


jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export GIT_REF="$CIRCLE_SHA1"
            npm run record-build-info
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - build
            - dist
            - .cache/Cypress

  check_outdated:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm
          command: 'npm ci --no-audit'
      - run:
          name: Check version
          command: 'npm --version'
      - run:
          name: Run check
          command: 'npm outdated typescript govuk-frontend'
      - slack/notify:
          event: fail
          channel: << pipeline.parameters.alerts-slack-channel >>
          template: basic_fail_1

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test:ci
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test-results/unit-test-reports.html

  integration_test:
    executor: integration-tests
    steps:
      - hmpps/install_aws_cli
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - run:
          name: Wait for localstack to start before creating resources
          command: sleep 10
      - run:
          name: Create localstack topic
          command: |
            export AWS_ACCESS_KEY_ID=pre-sentence-service
            export AWS_SECRET_ACCESS_KEY=pre-sentence-service
            export AWS_DEFAULT_REGION=eu-west-2
            aws --endpoint-url=http://localhost:4566 sns create-topic --name pre-sentence-service-topic-arn
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-jre8-standalone/2.33.1/wiremock-jre8-standalone-2.33.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Run the node app.
          command: |
            export WPROOFREADER_PORT=8081
            export AWS_ENDPOINT=http://localhost:4566
            npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration-tests/videos
      - store_artifacts:
          path: integration-tests/screenshots

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
        filters:
          tags:
            ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          helm_additional_args: --values ./pre-sentence-service/values-live.yaml
          context:
            - hmpps-common-vars
            - court-probation-live-dev
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          helm_additional_args: --values ./pre-sentence-service/values-live.yaml
          context:
            - hmpps-common-vars
            - court-probation-live-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          helm_additional_args: --values ./pre-sentence-service/values-live.yaml
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - court-probation-live-prod
          requires:
            - request-prod-approval

  security:
    triggers:
      - schedule:
          cron: "30 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - check_outdated:
          context:
            - hmpps-common-vars
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
