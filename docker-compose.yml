version: '3.1'
services:

  redis:
    image: 'bitnami/redis:7.0.5'
    networks:
      - hmpps
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  postgres:
    image: postgres:13.8
    networks:
      - hmpps
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=pre-sentence-service
      - POSTGRES_USER=pre-sentence-service
      - POSTGRES_DB=pre-sentence-service

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    ports:
      - "9090:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/auth/health" ]
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0

  wiremock:
    image: wiremock/wiremock
    networks:
      - hmpps
    container_name: wiremock
    restart: always
    volumes:
      - ./mappings:/home/wiremock/mappings
    ports:
      - "9092:8080"

  gotenberg:
    image: gotenberg/gotenberg:7.7.0
    networks:
      - hmpps
    container_name: gotenberg
    ports:
      - "3001:3001"
    command:
      - "gotenberg"
      - "--api-port=3001"
      - "--chromium-ignore-certificate-errors"
      - "--api-timeout=30s"
      - "--pdfengines-engines=pdftk"
      - "--uno-listener-restart-threshold=0" #disables uno listener
    restart: always
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:3001/health' ]

  localstack:
    image: localstack/localstack:1.2.0
    networks:
      - hmpps
    container_name: localstack
    ports:
      - "4566-4597:4566-4597"
      - "8999:8080"
    environment:
      - SERVICES=sns
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=${PORT_WEB_UI-8088}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
      - AWS_EXECUTION_ENV=True
      - DEFAULT_REGION=eu-west-2
      - HOSTNAME_EXTERNAL=${HOSTNAME_EXTERNAL-localstack}
    volumes:
      - './.localstack:/tmp/localstack'
      - $PWD/localstack:/docker-entrypoint-initaws.d

  community-api:
    image: quay.io/hmpps/community-api:latest
    networks:
      - hmpps
    container_name: community-api
    ports:
      - "8096:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev

  # wproofreader:
    image: quay.io/hmpps/pre-sentence-service-wproofreader:latest
    networks:
      - hmpps
    container_name: wproofreader
    ports:
      - "8081:8081"
      - "8443:8443"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/wscservice/api?cmd=ver" ]

  app:
    build: .
    networks:
      - hmpps
    container_name: pre-sentence-service
    depends_on: [ hmpps-auth, redis, postgres, gotenberg, localstack, community-api, wproofreader ]
    ports:
      - "3000:3000"
    environment:
      - REDIS_HOST=redis
      - HMPPS_AUTH_EXTERNAL_URL=http://localhost:9090/auth
      - HMPPS_AUTH_URL=http://hmpps-auth:8080/auth
      # These will need to match new creds in the seed auth service auth
      - API_CLIENT_ID=pre-sentence-service
      - API_CLIENT_SECRET=clientsecret
      - TOKEN_VERIFICATION_API_URL=http://localhost:8100
      - SYSTEM_CLIENT_ID=pre-sentence-service
      - SYSTEM_CLIENT_SECRET=system-client-secret
      - SESSION_SECRET=app-insecure-default-session
      - GOTENBERG_API_URL=http://localhost:3001
      - INGRESS_URL=http://localhost:3000
      - AWS_ENDPOINT=http://localhost:4566
      - ACCESS_KEY_ID=pre-sentence-service
      - SECRET_ACCESS_KEY=pre-sentence-service

networks:
  hmpps:
