version: '3.1'
services:

  redis:
    image: 'bitnami/redis:5.0'
    networks:
      - hmpps_int
    container_name: redis_int
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  wiremock:
    image: wiremock/wiremock
    networks:
      - hmpps_int
    container_name: wiremock_int
    restart: always
    ports:
      - "9091:8080"

  gotenberg:
    image: thecodingmachine/gotenberg:6.4.4
    networks:
      - hmpps_int
    container_name: gotenberg_int
    ports:
      - "3001:3000"
    restart: always
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:3000/ping' ]

  postgres:
    image: postgres:13.3
    networks:
      - hmpps_int
    container_name: postgres_int
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=pre-sentence-service
      - POSTGRES_USER=pre-sentence-service
      - POSTGRES_DB=pre-sentence-service

  localstack:
    image: localstack/localstack:0.13.2
    networks:
      - hmpps_int
    container_name: localstack_int
    ports:
      - "4566-4597:4566-4597"
      - "8999:8080"
    environment:
      - SERVICES=sns
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=${PORT_WEB_UI-8088}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
      - AWS_EXECUTION_ENV=True
      - DEFAULT_REGION=eu-west-2
      - HOSTNAME_EXTERNAL=${HOSTNAME_EXTERNAL-localstack}
    volumes:
      - './.localstack:/tmp/localstack'
      - $PWD/localstack:/docker-entrypoint-initaws.d

  community-api:
    image: quay.io/hmpps/community-api:latest
    networks:
      - hmpps_int
    container_name: community-api_int
    ports:
      - "8096:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev

networks:
  hmpps_int:
